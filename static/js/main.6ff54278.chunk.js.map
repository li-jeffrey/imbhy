{"version":3,"sources":["components/EtaPanel.js","components/RouteSelector.js","App.js","reportWebVitals.js","providers/util.js","providers/kmb.js","providers/ctb-nwfb.js","Providers.js","index.js"],"names":["EtaPanel","props","selectedStopId","tableData","now","Date","etaData","length","colSpan","sort","o1","o2","map","o","etaDisplayStr","millis","remark","etaStr","eta","Math","floor","rowKey","selectedRoute","RouteSelector","useState","value","dropdownOpen","ignoreBlur","items","state","setState","dropdownItems","filter","item","shouldItemRender","className","onClick","itemSelected","itemClicked","onTouchStart","onMouseEnter","onMouseLeave","htmlFor","type","name","id","placeholder","onChange","event","target","onBlur","autoComplete","App","providers","selectedProvider","Object","keys","selectedDirection","routeData","routeStops","isLoading","error","appData","setAppData","setLoading","raiseError","err","console","message","updateRoutes","formData","providerApi","getRoutes","then","data","updateRouteStops","catch","getStopsByRouteAndBound","onSubmit","preventDefault","stopId","FormData","get","getEtaByRouteAndStopId","provider","indexOf","val","bound","key","stop","i","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","groupBy","arr","keyExtractor","obj","el","push","toMap","Error","BASE_URL","ROUTES","STOPS","a","fetch","response","ok","statusText","json","getStopsById","getStopIdsByRoute","route","stopIds","stopsById","KMB_PROVIDER","companyId","routes","dest_en","dest_tc","dest_sc","service_type","getStopByStopId","stops","NWFB_CTY_PROVIDER","getStopsByRoute","getEta","PROVIDERS","NWFB","CITYBUS","KMB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ff54278.chunk.js","sourcesContent":["function millisToMins(millis) {\n    return Math.floor(millis / (1000 * 60));\n}\n\nexport default function EtaPanel(props) {\n    if (props.selectedStopId === '') {\n        return (\n            <div></div>\n        )\n    }\n\n    const now = new Date();\n    var tableData;\n    if (props.etaData.length === 0) {\n        tableData = <tr><td colSpan=\"2\">No data</td></tr>;\n    } else {\n        tableData = props.etaData\n            .sort((o1, o2) => {\n                if (o1['eta'] === '') {\n                    return 1;\n                }\n\n                if (o2['eta'] === '') {\n                    return -1;\n                }\n\n                return new Date(o1['eta']) - new Date(o2['eta']);\n            })\n            .map(o => {\n                const remark = o['rmk_en']\n                const etaStr = o['eta'];\n                var etaDisplayStr;\n                if (etaStr === '') {\n                    etaDisplayStr = 'Unknown';\n                } else {\n                    const eta = millisToMins(new Date(etaStr) - now);\n                    etaDisplayStr = eta <= 0 ? '<1 min' : `${eta} min(s)`;\n                }\n\n                const rowKey = `${props.selectedRoute}:${props.selectedStopId}:${etaStr}`\n                return (\n                    <tr key={rowKey}>\n                        <td key={`${rowKey}:eta`}>{etaDisplayStr}</td>\n                        <td key={`${rowKey}:remark`}>{remark}</td>\n                    </tr>\n                )\n            });\n    }\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <td>ETA</td>\n                    <td>Remarks</td>\n                </tr>\n            </thead>\n            <tbody>\n                {tableData}\n            </tbody>\n        </table>\n    )\n}","import './RouteSelector.css';\nimport { useState } from \"react\";\n\nexport default function RouteSelector(props) {\n    const [state, setState] = useState({\n        value: '',\n        dropdownOpen: false,\n        ignoreBlur: false,\n        items: []\n    });\n\n    const displayDropdown = () => {\n        if (!state.dropdownOpen) {\n            setState({ ...state, dropdownOpen: true });\n        }\n    }\n\n    const itemClicked = item => {\n        setState({ ...state, value: item, dropdownOpen: false });\n        props.itemSelected(item);\n    }\n\n    const onBlur = event => {\n        if (state.ignoreBlur) {\n            return;\n        }\n        setState({ ...state, value: event.target.value, dropdownOpen: false });\n        props.itemSelected(state.value);\n    }\n\n    const dropdownItems = props.items\n        .filter(item => props.shouldItemRender(item, state.value))\n        .map(item =>\n            <div key={`dropdown-${item}`}\n                className=\"dropdown-item\"\n                onClick={() => itemClicked(item)}\n                onTouchStart={() => setState({ ...state, ignoreBlur: true })}\n                onMouseEnter={() => setState({ ...state, ignoreBlur: true })}\n                onMouseLeave={() => setState({ ...state, ignoreBlur: false })}\n            >{item}</div>\n        );\n\n    return (\n        <div>\n            <label htmlFor=\"route\">Route: </label>\n            <input type=\"text\"\n                name=\"route\"\n                id=\"route\"\n                placeholder=\"Enter a route...\"\n                className=\"dropdown-input\"\n                value={state.value}\n                onChange={event => setState({ ...state, value: event.target.value })}\n                onBlur={onBlur}\n                onClick={displayDropdown} \n                autoComplete=\"off\"/>\n            {state.dropdownOpen &&\n                <div className=\"dropdown-container\">\n                    {dropdownItems}\n                </div>}\n        </div>\n    )\n}","import { useState } from 'react';\nimport './App.css';\nimport EtaPanel from './components/EtaPanel';\nimport RouteSelector from './components/RouteSelector';\n\nfunction App(props) {\n  const providers = props.providers;\n  const [appData, setAppData] = useState({\n    selectedProvider: Object.keys(providers)[0],\n    selectedRoute: '',\n    selectedDirection: 'outbound',\n    selectedStopId: '',\n    routeData: {},\n    routeStops: [],\n    etaData: [],\n    isLoading: true,\n    error: null\n  });\n\n  const setLoading = isLoading => {\n    if (appData.isLoading !== isLoading) {\n      setAppData({ ...appData, isLoading: isLoading });\n    }\n  }\n\n  const raiseError = err => {\n    console.error(err.message);\n    setAppData({ ...appData, error: err });\n  }\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const stopId = formData.get('Stop');\n    const providerApi = providers[appData.selectedProvider];\n    providerApi.getEtaByRouteAndStopId(appData.selectedRoute, stopId)\n      .then(data => setAppData({ ...appData, selectedStopId: stopId, etaData: data }))\n      .catch(raiseError);\n  }\n\n  const updateRoutes = formData => {\n    const providerApi = providers[formData['selectedProvider']];\n    setLoading(true);\n    providerApi.getRoutes()\n      .then(data => {\n        updateRouteStops(\n          { ...formData, routeData: data, selectedRoute: '' }\n        );\n      })\n      .catch(raiseError);\n  }\n\n  const updateRouteStops = formData => {\n    const providerApi = providers[formData['selectedProvider']];\n    if (formData['selectedRoute'] === '') {\n      setAppData({ ...formData, routeStops: [], selectedStopId: '', isLoading: false });\n      return;\n    }\n\n    if (formData['selectedRoute'] === appData['selectedRoute'] &&\n      formData['selectedDirection'] === appData['selectedDirection']) {\n      return;\n    }\n\n    setLoading(true);\n    providerApi.getStopsByRouteAndBound(formData['selectedRoute'], formData['selectedDirection'])\n      .then(data => setAppData({ ...formData, routeStops: data, selectedStopId: '', isLoading: false }))\n      .catch(raiseError);\n  }\n\n  const resetStopId = () => {\n    setAppData({ ...appData, selectedStopId: '' });\n  }\n\n  if (Object.keys(appData.routeData).length === 0) {\n    updateRoutes(appData);\n  }\n\n  return (\n    <main>\n      <h1>Is my bus here yet?</h1>\n      <form onSubmit={onSubmit}>\n        <fieldset>\n          <label htmlFor=\"provider\">Provider: </label>\n          <select\n            id=\"provider\"\n            name=\"Provider\"\n            value={appData.selectedProvider}\n            onChange={event => updateRoutes({ ...appData, selectedProvider: event.target.value })}>\n            {Object.keys(providers).map(provider => <option value={provider} key={provider}>{provider}</option>)}\n          </select>\n        </fieldset>\n        <fieldset>\n          <RouteSelector\n            value={appData.selectedRoute}\n            items={Object.keys(appData.routeData)}\n            shouldItemRender={(item, value) => item.indexOf(value) > -1}\n            itemSelected={val => updateRouteStops({ ...appData, selectedRoute: val })} />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"direction\">Destination: </label>\n          <select\n            id=\"direction\"\n            name=\"Direction\"\n            value={appData.selectedDirection}\n            onChange={event => updateRouteStops({ ...appData, selectedDirection: event.target.value })}>\n            {appData.selectedRoute !== '' && appData.routeData[appData.selectedRoute]\n              .map(o => {\n                const bound = o['bound'] === 'O' ? \"outbound\" : \"inbound\";\n                const key = `${appData.selectedRoute}:${bound}`;\n                return <option value={bound} key={key}>{o['dest_en']}</option>\n              })}\n          </select>\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"stop\">Stop: </label>\n          <select id=\"stop\" name=\"Stop\" onChange={resetStopId}>\n            {appData.routeStops.map((stop, i) => {\n              const stopId = stop['stop'];\n              const key = `${stopId}-${i}`\n              return <option value={stopId} key={key}>{stop['name_en']}</option>\n            })}\n          </select>\n        </fieldset>\n        <fieldset>\n          {appData.isLoading ?\n            <button type=\"submit\" disabled className=\"btn-disabled\">Loading...</button> :\n            <button type=\"submit\">{appData.selectedStopId !== '' ? 'Refresh' : 'Go'}</button>}\n        </fieldset>\n      </form>\n      {appData.error && <div className=\"warn-text\">{appData.error.message}</div>}\n      <hr></hr>\n      <EtaPanel selectedRoute={appData.selectedRoute} selectedStopId={appData.selectedStopId} etaData={appData.etaData} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function groupBy(arr, keyExtractor) {\n    var obj = {};\n    for (const el of arr) {\n        const key = keyExtractor(el);\n        if (key in obj) {\n            obj[key].push(el);\n        } else {\n            obj[key] = [el];\n        }\n    }\n\n    return obj;\n}\n\nexport function toMap(arr, keyExtractor) {\n    var obj = {};\n    for (const el of arr) {\n        const key = keyExtractor(el);\n        if (key in obj) {\n            throw new Error(`Duplicate key: ${key}`);\n        }\n\n        obj[key] = el;\n    }\n\n    return obj;\n}","import { groupBy, toMap } from \"./util\";\n\nconst BASE_URL = \"https://data.etabus.gov.hk\";\n\nvar ROUTES = null;\nvar STOPS = null;\n\nasync function getRoutes() {\n    if (ROUTES == null) {\n        const response = await fetch(`${BASE_URL}/v1/transport/kmb/route`);\n        if (!response.ok) throw new Error(response.statusText);\n        var data = await response.json();\n        data = data['data'].filter(o => o['service_type'] === '1');\n        ROUTES = groupBy(data, o => o['route']);\n    }\n\n    return ROUTES;\n}\n\nasync function getStopsById() {\n    if (STOPS == null) {\n        const response = await fetch(`${BASE_URL}/v1/transport/kmb/stop`);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        STOPS = toMap(data['data'], o => o['stop']);\n    }\n\n    return STOPS;\n}\n\nasync function getStopIdsByRoute(route, bound) {\n    const response = await fetch(`${BASE_URL}/v1/transport/kmb/route-stop/${route}/${bound}/1`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'].map(o => o['stop']);\n}\n\nasync function getStopsByRoute(route, bound) {\n    const stopIds = await getStopIdsByRoute(route, bound);\n    const stopsById = await getStopsById();\n    return stopIds.map(stopId => stopsById[stopId]);\n}\n\nasync function getEta(route, stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/kmb/eta/${stopId}/${route}/1`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nexport const KMB_PROVIDER = {\n    getRoutes: getRoutes,\n    getStopsByRouteAndBound: getStopsByRoute,\n    getEtaByRouteAndStopId: getEta\n}","import { groupBy } from \"./util\";\n\nconst BASE_URL = \"https://rt.data.gov.hk\";\n\nconst ROUTES = {};\nconst STOPS = {};\n\nasync function getRoutes(companyId) {\n    if (!(companyId in ROUTES)) {\n        const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/route/${companyId}`);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        const routes = [];\n        for (const route of data['data']) {\n            routes.push({\n                route: route['route'],\n                bound: 'O',\n                dest_en: route['dest_en'],\n                dest_tc: route['dest_tc'],\n                dest_sc: route['dest_sc'],\n                service_type: '1'\n            });\n            routes.push({\n                route: route['route'],\n                bound: 'I',\n                dest_en: route['orig_en'],\n                dest_tc: route['orig_tc'],\n                dest_sc: route['orig_sc'],\n                service_type: '1'\n            });\n        }\n\n        ROUTES[companyId] = groupBy(routes, o => o['route']);\n    }\n\n    return ROUTES[companyId];\n}\n\nasync function getStopIdsByRoute(companyId, route, bound) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/route-stop/${companyId}/${route}/${bound}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'].map(o => o['stop']);\n}\n\nasync function getStopByStopId(stopId) {\n    if (!(stopId in STOPS)) {\n        const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/stop/${stopId}`);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        STOPS[stopId] = data['data'];\n    }\n\n    return STOPS[stopId];\n}\n\nasync function getStopsByRoute(companyId, route, bound) {\n    const stopIds = await getStopIdsByRoute(companyId, route, bound);\n    const stops = [];\n    for (const stopId of stopIds) {\n        stops.push(await getStopByStopId(stopId));\n    }\n\n    return stops;\n}\n\nasync function getEta(companyId, route, stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/eta/${companyId}/${stopId}/${route}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nexport default function NWFB_CTY_PROVIDER(companyId) {\n    return {\n        getRoutes: () => getRoutes(companyId),\n        getStopsByRouteAndBound: (route, bound) => getStopsByRoute(companyId, route, bound),\n        getEtaByRouteAndStopId: (route, stopId) => getEta(companyId, route, stopId)\n    }\n}","import { KMB_PROVIDER } from \"./providers/kmb\";\nimport NWFB_CTY_PROVIDER from \"./providers/ctb-nwfb\";\n\nconst PROVIDERS = {\n    NWFB: NWFB_CTY_PROVIDER('NWFB'),\n    CITYBUS: NWFB_CTY_PROVIDER('CTB'),\n    KMB: KMB_PROVIDER,\n}\n\nexport default PROVIDERS;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport PROVIDERS from './Providers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App providers={PROVIDERS} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}