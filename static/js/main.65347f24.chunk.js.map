{"version":3,"sources":["components/EtaPanel.js","components/RouteCache.js","components/RouteSelector.js","components/StopSelector.js","App.js","reportWebVitals.js","providers/util.js","providers/kmb.js","providers/ctb-nwfb.js","Providers.js","index.js"],"names":["EtaPanel","props","selectedStopId","tableData","now","Date","etaData","length","colSpan","sort","o1","o2","map","o","etaDisplayStr","millis","remark","etaStr","eta","Math","floor","rowKey","selectedRoute","className","CACHES","saveCache","cache","toArrayCache","localStorage","setItem","key","JSON","stringify","ToArray","AddItem","item","head","allItems","add","value","nextNode","has","prev","cursor","RemoveItem","delete","arr","push","GetCache","name","Set","stored","getItem","values","parse","newCache","RouteSelector","textInput","useRef","useState","dropdownOpen","ignoreBlur","items","state","setState","itemClicked","onItemSelected","recentItems","filter","shouldItemRender","onClick","onRemoveRecentItem","current","focus","removeItemClicked","otherItems","concat","htmlFor","type","ref","id","placeholder","disabled","onChange","event","target","onBlur","onFocus","autoComplete","onTouchStart","onMouseEnter","onMouseLeave","StopSelector","newVal","stop","i","stopId","navigator","geolocation","getCurrentPosition","pos","nearestStop","stops","lat","long","nearestStopDistance","stopLat","parseFloat","stopLong","stopDistance","pow","findNearestStop","coords","latitude","longitude","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","width","fill","d","App","providers","selectedProvider","Object","keys","selectedDirection","routeData","recentRoutes","routeStops","isLoading","error","appData","setAppData","setLoading","raiseError","err","console","message","updateRoutes","formData","providerApi","getRoutes","then","data","updateRouteStops","catch","getStopsByRouteAndBound","onSubmit","preventDefault","FormData","get","getEtaByRouteAndStopId","provider","HasItem","isRecentItem","indexOf","val","bound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","groupBy","keyExtractor","obj","el","toMap","Error","BASE_URL","ROUTES","STOPS","a","fetch","response","ok","statusText","json","getStopsById","getStopIdsByRoute","route","stopIds","stopsById","KMB_PROVIDER","companyId","routes","dest_en","dest_tc","dest_sc","service_type","getStopByStopId","Promise","all","NWFB_CTY_PROVIDER","getStopsByRoute","getEta","PROVIDERS","NWFB","CITYBUS","KMB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65347f24.chunk.js","sourcesContent":["import './EtaPanel.css';\n\nfunction millisToMins(millis) {\n    return Math.floor(millis / (1000 * 60));\n}\n\nexport default function EtaPanel(props) {\n    if (props.selectedStopId === '') {\n        return (\n            <div></div>\n        )\n    }\n\n    const now = new Date();\n    var tableData;\n    if (props.etaData.length === 0) {\n        tableData = <tr><td colSpan=\"2\">No data</td></tr>;\n    } else {\n        tableData = props.etaData\n            .sort((o1, o2) => {\n                if (o1['eta'] === '') {\n                    return 1;\n                }\n\n                if (o2['eta'] === '') {\n                    return -1;\n                }\n\n                return new Date(o1['eta']) - new Date(o2['eta']);\n            })\n            .map(o => {\n                const remark = o['rmk_en']\n                const etaStr = o['eta'];\n                var etaDisplayStr;\n                if (etaStr === '') {\n                    etaDisplayStr = 'Unknown';\n                } else {\n                    const eta = millisToMins(new Date(etaStr) - now);\n                    etaDisplayStr = eta <= 0 ? '<1 min' : `${eta} min(s)`;\n                }\n\n                const rowKey = `${props.selectedRoute}:${props.selectedStopId}:${etaStr}`\n                return (\n                    <tr key={rowKey}>\n                        <td key={`${rowKey}:eta`}>{etaDisplayStr}</td>\n                        <td key={`${rowKey}:remark`}>{remark}</td>\n                    </tr>\n                )\n            });\n    }\n\n    return (\n        <table className=\"eta-table\">\n            <thead>\n                <tr>\n                    <td>ETA</td>\n                    <td className=\"eta-remarks-col\">Remarks</td>\n                </tr>\n            </thead>\n            <tbody>\n                {tableData}\n            </tbody>\n        </table>\n    )\n}","const LOCALSTORAGE_PREFIX = \"imbhy-routes-\";\nconst CACHES = {};\n\nfunction newCache(name) {\n    const key = LOCALSTORAGE_PREFIX + name;\n    const allItems = new Set();\n    var head = null;\n    var toArrayCache = null;\n\n    const stored = localStorage.getItem(key);\n    if (stored != null) {\n        const values = JSON.parse(stored);\n        var cursor = null;\n        for (const item of values) {\n            if (cursor == null) {\n                head = {\n                    value: item,\n                    nextNode: null\n                };\n\n                cursor = head;\n            } else {\n                cursor.nextNode = {\n                    value: item,\n                    nextNode: null\n                }\n                cursor = cursor.nextNode;\n            }\n            allItems.add(item);\n        }\n        toArrayCache = values;\n    }\n\n    return { key, allItems, head, toArrayCache };\n}\n\nfunction saveCache(cache) {\n    cache.toArrayCache = null;\n    localStorage.setItem(cache.key, JSON.stringify(ToArray(cache)));\n    return cache;\n}\n\nexport function AddItem(cache, item) {\n    if (cache.head == null) {\n        cache.allItems.add(item);\n        cache.head = {\n            value: item,\n            nextNode: null\n        }\n    } else {\n        if (cache.allItems.has(item)) {\n            if (cache.head.value === item) {\n                return cache;\n            }\n\n            var prev = cache.head;\n            var cursor = cache.head.nextNode;\n            while (cursor != null) {\n                if (cursor.value === item) {\n                    prev.nextNode = cursor.nextNode;\n                    break;\n                }\n                prev = cursor;\n                cursor = cursor.nextNode;\n            }\n        }\n\n        cache.allItems.add(item);\n        cache.head = {\n            value: item,\n            nextNode: cache.head\n        }\n    }\n\n    return saveCache(cache);\n}\n\nexport function RemoveItem(cache, item) {\n    if (cache.allItems.delete(item)) {\n        if (cache.head.value === item) {\n            cache.head = cache.head.nextNode;\n        } else {\n            var prev = cache.head;\n            var cursor = cache.head.nextNode;\n            while (cursor != null) {\n                if (cursor.value === item) {\n                    prev.nextNode = cursor.nextNode;\n                    break;\n                }\n                prev = cursor;\n                cursor = cursor.nextNode;\n            }\n        }\n\n        return saveCache(cache);\n    }\n\n    return cache;\n}\n\nexport function HasItem(cache, item) {\n    if (cache == null) {\n        return false;\n    }\n\n    return cache.allItems.has(item);\n}\n\nexport function ToArray(cache) {\n    if (cache == null) {\n        return [];\n    }\n\n    if (cache.toArrayCache == null) {\n        const arr = [];\n        var cursor = cache.head;\n        while (cursor != null) {\n            arr.push(cursor.value);\n            cursor = cursor.nextNode;\n        }\n        cache.toArrayCache = arr;\n    }    \n\n    return cache.toArrayCache;\n}\n\nexport function GetCache(name) {\n    if (!(name in CACHES)) {\n        CACHES[name] = newCache(name);\n    }\n\n    return CACHES[name];\n}","import './RouteSelector.css';\nimport { useRef, useState } from \"react\";\n\nexport default function RouteSelector(props) {\n    const textInput = useRef(null);\n    const [state, setState] = useState({\n        value: '',\n        dropdownOpen: false,\n        ignoreBlur: false,\n        items: []\n    });\n\n    const displayDropdown = () => {\n        if (!state.dropdownOpen) {\n            setState({ ...state, dropdownOpen: true });\n        }\n    }\n\n    const itemClicked = item => {\n        setState({ ...state, value: item, dropdownOpen: false, ignoreBlur: false });\n        props.onItemSelected(item);\n    }\n\n    const removeItemClicked = item => {\n        props.onRemoveRecentItem(item);\n        textInput.current.focus();\n    }\n\n    const onBlur = event => {\n        if (state.ignoreBlur) {\n            return;\n        }\n        setState({ ...state, value: event.target.value, dropdownOpen: false });\n    }\n\n    const recentItems = props.recentItems\n        .filter(item => props.shouldItemRender(item, state.value))\n        .map(item =>\n            <div key={`dropdown-${item}`}\n                className=\"dropdown-item\">\n                <div className=\"dropdown-item-text recent-item\" onClick={() => itemClicked(item)}>{item}</div>\n                <button className=\"dropdown-item-btn\"\n                    onClick={() => removeItemClicked(item)}>&times;</button>\n            </div>\n        );\n\n    const otherItems = props.items\n        .filter(item => props.shouldItemRender(item, state.value))\n        .map(item =>\n            <div key={`dropdown-${item}`}\n                className=\"dropdown-item\">\n                <div className=\"dropdown-item-text\" onClick={() => itemClicked(item)}>{item}</div>\n            </div>\n        );\n\n    const allItems = recentItems.concat(otherItems);\n\n    return (\n        <div>\n            <label htmlFor=\"route\">Route: </label>\n            <input type=\"text\"\n                ref={textInput}\n                name=\"route\"\n                id=\"route\"\n                placeholder=\"Enter a route...\"\n                className=\"dropdown-input\"\n                value={state.value}\n                disabled={props.items.length === 0 && props.recentItems.length === 0}\n                onChange={event => setState({ ...state, value: event.target.value })}\n                onBlur={onBlur}\n                onFocus={displayDropdown}\n                autoComplete=\"off\" />\n            {state.dropdownOpen &&\n                <div className=\"dropdown-container\"\n                    onTouchStart={() => setState({ ...state, ignoreBlur: true })}\n                    onMouseEnter={() => setState({ ...state, ignoreBlur: true })}\n                    onMouseLeave={() => setState({ ...state, ignoreBlur: false })}>\n                    {allItems}\n                </div>}\n        </div>\n    )\n}","import { useState } from \"react\";\nimport './StopSelector.css';\n\nfunction findNearestStop(stops, lat, long) {\n    var nearestStop = null;\n    var nearestStopDistance = 10000.;\n    for (const stop of stops) {\n        const stopLat = parseFloat(stop['lat']);\n        const stopLong = parseFloat(stop['long']);\n        const stopDistance = Math.pow(lat - stopLat, 2) + Math.pow(long - stopLong, 2);\n        if (stopDistance < nearestStopDistance) {\n            nearestStop = stop;\n            nearestStopDistance = stopDistance;\n        }\n    }\n\n    return nearestStop;\n}\n\nexport default function StopSelector(props) {\n    const [state, setState] = useState({\n        value: ''\n    })\n\n    const valueChanged = newVal => {\n        setState({ value: newVal });\n        props.onItemSelected(newVal);\n    }\n\n    const selectNearestStop = () => {\n        navigator.geolocation.getCurrentPosition(pos => {\n            const nearestStop = findNearestStop(props.items, pos.coords.latitude, pos.coords.longitude);\n            setState({ value: nearestStop['stop'] });\n        });\n    }\n\n    return (\n        <fieldset>\n            <label htmlFor=\"stop\">Stop: </label>\n            <select\n                id=\"stop\" name=\"Stop\"\n                className=\"stop-selector\"\n                value={state.value}\n                onChange={event => valueChanged(event.target.value)}>\n                {props.items.map((stop, i) => {\n                    const stopId = stop['stop'];\n                    const key = `${stopId}-${i}`\n                    return <option value={stopId} key={key}>{stop['name_en']}</option>\n                })}\n            </select>\n            <button className=\"btn-location\"\n                disabled={props.items.length === 0 || !navigator.geolocation}\n                onClick={selectNearestStop}>\n                <svg\n                    aria-hidden=\"true\"\n                    focusable=\"false\"\n                    data-prefix=\"fas\"\n                    data-icon=\"map-marker-alt\"\n                    className=\"svg-inline--fa fa-map-marker-alt fa-w-12\"\n                    role=\"img\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 384 512\"\n                    width=\"1.25em\">\n                    <path fill=\"currentColor\" d=\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"></path>\n                </svg>\n            </button>\n        </fieldset>\n    )\n}","import { useState } from 'react';\nimport './App.css';\nimport EtaPanel from './components/EtaPanel';\nimport { AddItem, GetCache, HasItem, RemoveItem, ToArray } from './components/RouteCache';\nimport RouteSelector from './components/RouteSelector';\nimport StopSelector from './components/StopSelector';\n\nfunction App(props) {\n  const providers = props.providers;\n  const [appData, setAppData] = useState({\n    selectedProvider: Object.keys(providers)[0],\n    selectedRoute: '',\n    selectedDirection: 'outbound',\n    selectedStopId: '',\n    routeData: {},\n    recentRoutes: null,\n    routeStops: [],\n    etaData: [],\n    isLoading: true,\n    error: null\n  });\n\n  const setLoading = isLoading => {\n    if (appData.isLoading !== isLoading) {\n      setAppData({ ...appData, isLoading: isLoading });\n    }\n  }\n\n  const raiseError = err => {\n    console.error(err.message);\n    setAppData({ ...appData, error: err });\n  }\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const stopId = formData.get('Stop');\n    const providerApi = providers[appData.selectedProvider];\n    providerApi.getEtaByRouteAndStopId(appData.selectedRoute, stopId)\n      .then(data => setAppData({\n        ...appData,\n        selectedStopId: stopId,\n        etaData: data,\n        recentRoutes: AddItem(appData.recentRoutes, appData.selectedRoute)\n      }))\n      .catch(raiseError);\n  }\n\n  const updateRoutes = formData => {\n    const providerApi = providers[formData['selectedProvider']];\n    setLoading(true);\n    providerApi.getRoutes()\n      .then(data => {\n        updateRouteStops({\n          ...formData,\n          routeData: data,\n          selectedRoute: '',\n          recentRoutes: GetCache(formData['selectedProvider'])\n        });\n      })\n      .catch(raiseError);\n  }\n\n  const updateRouteStops = formData => {\n    const providerApi = providers[formData['selectedProvider']];\n    if (formData['selectedRoute'] === '') {\n      setAppData({ ...formData, routeStops: [], selectedStopId: '', isLoading: false });\n      return;\n    }\n\n    if (formData['selectedRoute'] === appData['selectedRoute'] &&\n      formData['selectedDirection'] === appData['selectedDirection']) {\n      return;\n    }\n\n    setLoading(true);\n    providerApi.getStopsByRouteAndBound(formData['selectedRoute'], formData['selectedDirection'])\n      .then(data => setAppData({ ...formData, routeStops: data, selectedStopId: '', isLoading: false }))\n      .catch(raiseError);\n  }\n\n  const isRecentItem = item => HasItem(appData.recentRoutes, item);\n\n  const removeRecentItem = item => {\n    setAppData({ ...appData, recentRoutes: RemoveItem(appData.recentRoutes, item) });\n  }\n\n  const resetStopId = () => {\n    setAppData({ ...appData, selectedStopId: '' });\n  }\n\n  if (Object.keys(appData.routeData).length === 0 && appData.error == null) {\n    updateRoutes(appData);\n  }\n\n  return (\n    <main>\n      <h1>Is my bus here yet?</h1>\n      <form onSubmit={onSubmit}>\n        <fieldset>\n          <label htmlFor=\"provider\">Provider: </label>\n          <select\n            id=\"provider\"\n            name=\"Provider\"\n            value={appData.selectedProvider}\n            onChange={event => updateRoutes({ ...appData, selectedProvider: event.target.value })}>\n            {Object.keys(providers).map(provider => <option value={provider} key={provider}>{provider}</option>)}\n          </select>\n        </fieldset>\n        <fieldset>\n          <RouteSelector\n            value={appData.selectedRoute}\n            recentItems={ToArray(appData.recentRoutes)}\n            items={Object.keys(appData.routeData).filter(item => !isRecentItem(item))}\n            shouldItemRender={(item, value) => item.indexOf(value) > -1}\n            onRemoveRecentItem={removeRecentItem}\n            onItemSelected={val => updateRouteStops({ ...appData, selectedRoute: val })} />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"direction\">Destination: </label>\n          <select\n            id=\"direction\"\n            name=\"Direction\"\n            value={appData.selectedDirection}\n            onChange={event => updateRouteStops({ ...appData, selectedDirection: event.target.value })}>\n            {appData.selectedRoute !== '' && appData.routeData[appData.selectedRoute]\n              .map(o => {\n                const bound = o['bound'] === 'O' ? \"outbound\" : \"inbound\";\n                const key = `${appData.selectedRoute}:${bound}`;\n                return <option value={bound} key={key}>{o['dest_en']}</option>\n              })}\n          </select>\n        </fieldset>\n        <StopSelector\n          items={appData.routeStops}\n          onItemSelected={resetStopId} />\n        <fieldset>\n          {appData.isLoading ?\n            <button type=\"submit\" disabled className=\"btn-disabled\">Loading...</button> :\n            <button type=\"submit\">{appData.selectedStopId !== '' ? 'Refresh' : 'Go'}</button>}\n        </fieldset>\n      </form>\n      {appData.error && <div className=\"warn-text\">{appData.error.message}</div>}\n      <hr></hr>\n      <EtaPanel selectedRoute={appData.selectedRoute} selectedStopId={appData.selectedStopId} etaData={appData.etaData} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function groupBy(arr, keyExtractor) {\n    var obj = {};\n    for (const el of arr) {\n        const key = keyExtractor(el);\n        if (key in obj) {\n            obj[key].push(el);\n        } else {\n            obj[key] = [el];\n        }\n    }\n\n    return obj;\n}\n\nexport function toMap(arr, keyExtractor) {\n    var obj = {};\n    for (const el of arr) {\n        const key = keyExtractor(el);\n        if (key in obj) {\n            throw new Error(`Duplicate key: ${key}`);\n        }\n\n        obj[key] = el;\n    }\n\n    return obj;\n}","import { groupBy, toMap } from \"./util\";\n\nconst BASE_URL = \"https://data.etabus.gov.hk\";\n\nvar ROUTES = null;\nvar STOPS = null;\n\nasync function getRoutes() {\n    if (ROUTES == null) {\n        const response = await fetch(`${BASE_URL}/v1/transport/kmb/route`);\n        if (!response.ok) throw new Error(response.statusText);\n        var data = await response.json();\n        data = data['data'].filter(o => o['service_type'] === '1');\n        ROUTES = groupBy(data, o => o['route']);\n    }\n\n    return ROUTES;\n}\n\nasync function getStopsById() {\n    if (STOPS == null) {\n        const response = await fetch(`${BASE_URL}/v1/transport/kmb/stop`);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        STOPS = toMap(data['data'], o => o['stop']);\n    }\n\n    return STOPS;\n}\n\nasync function getStopIdsByRoute(route, bound) {\n    const response = await fetch(`${BASE_URL}/v1/transport/kmb/route-stop/${route}/${bound}/1`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'].map(o => o['stop']);\n}\n\nasync function getStopsByRoute(route, bound) {\n    const stopIds = await getStopIdsByRoute(route, bound);\n    const stopsById = await getStopsById();\n    return stopIds.map(stopId => stopsById[stopId]);\n}\n\nasync function getEta(route, stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/kmb/eta/${stopId}/${route}/1`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nexport const KMB_PROVIDER = {\n    getRoutes: getRoutes,\n    getStopsByRouteAndBound: getStopsByRoute,\n    getEtaByRouteAndStopId: getEta\n}","import { groupBy } from \"./util\";\n\nconst BASE_URL = \"https://rt.data.gov.hk\";\n\nconst ROUTES = {};\n\nasync function getRoutes(companyId) {\n    if (!(companyId in ROUTES)) {\n        const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/route/${companyId}`);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        const routes = [];\n        for (const route of data['data']) {\n            routes.push({\n                route: route['route'],\n                bound: 'O',\n                dest_en: route['dest_en'],\n                dest_tc: route['dest_tc'],\n                dest_sc: route['dest_sc'],\n                service_type: '1'\n            });\n            routes.push({\n                route: route['route'],\n                bound: 'I',\n                dest_en: route['orig_en'],\n                dest_tc: route['orig_tc'],\n                dest_sc: route['orig_sc'],\n                service_type: '1'\n            });\n        }\n\n        ROUTES[companyId] = groupBy(routes, o => o['route']);\n    }\n\n    return ROUTES[companyId];\n}\n\nasync function getStopIdsByRoute(companyId, route, bound) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/route-stop/${companyId}/${route}/${bound}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'].map(o => o['stop']);\n}\n\nasync function getStopByStopId(stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/stop/${stopId}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nasync function getStopsByRoute(companyId, route, bound) {\n    const stopIds = await getStopIdsByRoute(companyId, route, bound);\n    return await Promise.all(stopIds.map(stopId => getStopByStopId(stopId)));\n}\n\nasync function getEta(companyId, route, stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/eta/${companyId}/${stopId}/${route}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nexport default function NWFB_CTY_PROVIDER(companyId) {\n    return {\n        getRoutes: () => getRoutes(companyId),\n        getStopsByRouteAndBound: (route, bound) => getStopsByRoute(companyId, route, bound),\n        getEtaByRouteAndStopId: (route, stopId) => getEta(companyId, route, stopId)\n    }\n}","import { KMB_PROVIDER } from \"./providers/kmb\";\nimport NWFB_CTY_PROVIDER from \"./providers/ctb-nwfb\";\n\nconst PROVIDERS = {\n    NWFB: NWFB_CTY_PROVIDER('NWFB'),\n    CITYBUS: NWFB_CTY_PROVIDER('CTB'),\n    KMB: KMB_PROVIDER,\n}\n\nexport default PROVIDERS;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport PROVIDERS from './Providers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App providers={PROVIDERS} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}