{"version":3,"sources":["components/EtaPanel.js","components/RouteSelector.js","components/StopSelector.js","App.js","reportWebVitals.js","providers/util.js","providers/kmb.js","providers/ctb-nwfb.js","Providers.js","index.js"],"names":["EtaPanel","props","selectedStopId","tableData","now","Date","etaData","length","colSpan","sort","o1","o2","map","o","etaDisplayStr","millis","remark","etaStr","eta","Math","floor","rowKey","selectedRoute","RouteSelector","useState","value","dropdownOpen","ignoreBlur","items","state","setState","dropdownItems","filter","item","shouldItemRender","className","onClick","itemSelected","itemClicked","onTouchStart","onMouseEnter","onMouseLeave","htmlFor","type","name","id","placeholder","onChange","event","target","onBlur","autoComplete","StopSelector","newVal","stop","i","stopId","key","disabled","navigator","geolocation","getCurrentPosition","pos","nearestStop","stops","lat","long","nearestStopDistance","stopLat","parseFloat","stopLong","stopDistance","pow","findNearestStop","coords","latitude","longitude","aria-hidden","focusable","data-prefix","data-icon","role","xmlns","viewBox","width","fill","d","App","providers","selectedProvider","Object","keys","selectedDirection","routeData","routeStops","isLoading","error","appData","setAppData","setLoading","raiseError","err","console","message","updateRoutes","formData","providerApi","getRoutes","then","data","updateRouteStops","catch","getStopsByRouteAndBound","onSubmit","preventDefault","FormData","get","getEtaByRouteAndStopId","provider","indexOf","val","bound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","groupBy","arr","keyExtractor","obj","el","push","toMap","Error","BASE_URL","ROUTES","STOPS","a","fetch","response","ok","statusText","json","getStopsById","getStopIdsByRoute","route","stopIds","stopsById","KMB_PROVIDER","companyId","routes","dest_en","dest_tc","dest_sc","service_type","getStopByStopId","Promise","all","NWFB_CTY_PROVIDER","getStopsByRoute","getEta","PROVIDERS","NWFB","CITYBUS","KMB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f635d34.chunk.js","sourcesContent":["function millisToMins(millis) {\n    return Math.floor(millis / (1000 * 60));\n}\n\nexport default function EtaPanel(props) {\n    if (props.selectedStopId === '') {\n        return (\n            <div></div>\n        )\n    }\n\n    const now = new Date();\n    var tableData;\n    if (props.etaData.length === 0) {\n        tableData = <tr><td colSpan=\"2\">No data</td></tr>;\n    } else {\n        tableData = props.etaData\n            .sort((o1, o2) => {\n                if (o1['eta'] === '') {\n                    return 1;\n                }\n\n                if (o2['eta'] === '') {\n                    return -1;\n                }\n\n                return new Date(o1['eta']) - new Date(o2['eta']);\n            })\n            .map(o => {\n                const remark = o['rmk_en']\n                const etaStr = o['eta'];\n                var etaDisplayStr;\n                if (etaStr === '') {\n                    etaDisplayStr = 'Unknown';\n                } else {\n                    const eta = millisToMins(new Date(etaStr) - now);\n                    etaDisplayStr = eta <= 0 ? '<1 min' : `${eta} min(s)`;\n                }\n\n                const rowKey = `${props.selectedRoute}:${props.selectedStopId}:${etaStr}`\n                return (\n                    <tr key={rowKey}>\n                        <td key={`${rowKey}:eta`}>{etaDisplayStr}</td>\n                        <td key={`${rowKey}:remark`}>{remark}</td>\n                    </tr>\n                )\n            });\n    }\n\n    return (\n        <table>\n            <thead>\n                <tr>\n                    <td>ETA</td>\n                    <td>Remarks</td>\n                </tr>\n            </thead>\n            <tbody>\n                {tableData}\n            </tbody>\n        </table>\n    )\n}","import './RouteSelector.css';\nimport { useState } from \"react\";\n\nexport default function RouteSelector(props) {\n    const [state, setState] = useState({\n        value: '',\n        dropdownOpen: false,\n        ignoreBlur: false,\n        items: []\n    });\n\n    const displayDropdown = () => {\n        if (!state.dropdownOpen) {\n            setState({ ...state, dropdownOpen: true });\n        }\n    }\n\n    const itemClicked = item => {\n        setState({ ...state, value: item, dropdownOpen: false });\n        props.itemSelected(item);\n    }\n\n    const onBlur = event => {\n        if (state.ignoreBlur) {\n            return;\n        }\n        setState({ ...state, value: event.target.value, dropdownOpen: false });\n    }\n\n    const dropdownItems = props.items\n        .filter(item => props.shouldItemRender(item, state.value))\n        .map(item =>\n            <div key={`dropdown-${item}`}\n                className=\"dropdown-item\"\n                onClick={() => itemClicked(item)}\n                onTouchStart={() => setState({ ...state, ignoreBlur: true })}\n                onMouseEnter={() => setState({ ...state, ignoreBlur: true })}\n                onMouseLeave={() => setState({ ...state, ignoreBlur: false })}\n            >{item}</div>\n        );\n\n    return (\n        <div>\n            <label htmlFor=\"route\">Route: </label>\n            <input type=\"text\"\n                name=\"route\"\n                id=\"route\"\n                placeholder=\"Enter a route...\"\n                className=\"dropdown-input\"\n                value={state.value}\n                onChange={event => setState({ ...state, value: event.target.value })}\n                onBlur={onBlur}\n                onClick={displayDropdown} \n                autoComplete=\"off\"/>\n            {state.dropdownOpen &&\n                <div className=\"dropdown-container\">\n                    {dropdownItems}\n                </div>}\n        </div>\n    )\n}","import { useState } from \"react\";\nimport './StopSelector.css';\n\nfunction findNearestStop(stops, lat, long) {\n    var nearestStop = null;\n    var nearestStopDistance = 10000.;\n    for (const stop of stops) {\n        const stopLat = parseFloat(stop['lat']);\n        const stopLong = parseFloat(stop['long']);\n        const stopDistance = Math.pow(lat - stopLat, 2) + Math.pow(long - stopLong, 2);\n        if (stopDistance < nearestStopDistance) {\n            nearestStop = stop;\n            nearestStopDistance = stopDistance;\n        }\n    }\n\n    return nearestStop;\n}\n\nexport default function StopSelector(props) {\n    const [state, setState] = useState({\n        value: ''\n    })\n\n    const valueChanged = newVal => {\n        setState({ value: newVal });\n        props.itemSelected(newVal);\n    }\n\n    const selectNearestStop = () => {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(pos => {\n                const nearestStop = findNearestStop(props.items, pos.coords.latitude, pos.coords.longitude);\n                setState({ value: nearestStop['stop'] });\n            })\n        }\n    }\n\n    return (\n        <div className=\"stop-selector-container\">\n            <fieldset>\n                <label htmlFor=\"stop\">Stop: </label>\n                <select\n                    id=\"stop\" name=\"Stop\"\n                    value={state.value}\n                    onChange={event => valueChanged(event.target.value)}>\n                    {props.items.map((stop, i) => {\n                        const stopId = stop['stop'];\n                        const key = `${stopId}-${i}`\n                        return <option value={stopId} key={key}>{stop['name_en']}</option>\n                    })}\n                </select>\n            </fieldset>\n            <fieldset className=\"btn-location-container\">\n                <button className=\"btn-location\" disabled={props.items.length === 0} onClick={selectNearestStop}>\n                    <svg\n                        aria-hidden=\"true\"\n                        focusable=\"false\"\n                        data-prefix=\"fas\"\n                        data-icon=\"map-marker-alt\"\n                        className=\"svg-inline--fa fa-map-marker-alt fa-w-12\"\n                        role=\"img\"\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        viewBox=\"0 0 384 512\"\n                        width=\"1.25em\">\n                        <path fill=\"currentColor\" d=\"M172.268 501.67C26.97 291.031 0 269.413 0 192 0 85.961 85.961 0 192 0s192 85.961 192 192c0 77.413-26.97 99.031-172.268 309.67-9.535 13.774-29.93 13.773-39.464 0zM192 272c44.183 0 80-35.817 80-80s-35.817-80-80-80-80 35.817-80 80 35.817 80 80 80z\"></path>\n                    </svg>\n                </button>\n            </fieldset>\n        </div>\n    )\n}","import { useState } from 'react';\nimport './App.css';\nimport EtaPanel from './components/EtaPanel';\nimport RouteSelector from './components/RouteSelector';\nimport StopSelector from './components/StopSelector';\n\nfunction App(props) {\n  const providers = props.providers;\n  const [appData, setAppData] = useState({\n    selectedProvider: Object.keys(providers)[0],\n    selectedRoute: '',\n    selectedDirection: 'outbound',\n    selectedStopId: '',\n    routeData: {},\n    routeStops: [],\n    etaData: [],\n    isLoading: true,\n    error: null\n  });\n\n  const setLoading = isLoading => {\n    if (appData.isLoading !== isLoading) {\n      setAppData({ ...appData, isLoading: isLoading });\n    }\n  }\n\n  const raiseError = err => {\n    console.error(err.message);\n    setAppData({ ...appData, error: err });\n  }\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const formData = new FormData(event.target);\n    const stopId = formData.get('Stop');\n    const providerApi = providers[appData.selectedProvider];\n    providerApi.getEtaByRouteAndStopId(appData.selectedRoute, stopId)\n      .then(data => setAppData({ ...appData, selectedStopId: stopId, etaData: data }))\n      .catch(raiseError);\n  }\n\n  const updateRoutes = formData => {\n    const providerApi = providers[formData['selectedProvider']];\n    setLoading(true);\n    providerApi.getRoutes()\n      .then(data => {\n        updateRouteStops(\n          { ...formData, routeData: data, selectedRoute: '' }\n        );\n      })\n      .catch(raiseError);\n  }\n\n  const updateRouteStops = formData => {\n    const providerApi = providers[formData['selectedProvider']];\n    if (formData['selectedRoute'] === '') {\n      setAppData({ ...formData, routeStops: [], selectedStopId: '', isLoading: false });\n      return;\n    }\n\n    if (formData['selectedRoute'] === appData['selectedRoute'] &&\n      formData['selectedDirection'] === appData['selectedDirection']) {\n      return;\n    }\n\n    setLoading(true);\n    providerApi.getStopsByRouteAndBound(formData['selectedRoute'], formData['selectedDirection'])\n      .then(data => setAppData({ ...formData, routeStops: data, selectedStopId: '', isLoading: false }))\n      .catch(raiseError);\n  }\n\n  const resetStopId = () => {\n    setAppData({ ...appData, selectedStopId: '' });\n  }\n\n  if (Object.keys(appData.routeData).length === 0) {\n    updateRoutes(appData);\n  }\n\n  return (\n    <main>\n      <h1>Is my bus here yet?</h1>\n      <form onSubmit={onSubmit}>\n        <fieldset>\n          <label htmlFor=\"provider\">Provider: </label>\n          <select\n            id=\"provider\"\n            name=\"Provider\"\n            value={appData.selectedProvider}\n            onChange={event => updateRoutes({ ...appData, selectedProvider: event.target.value })}>\n            {Object.keys(providers).map(provider => <option value={provider} key={provider}>{provider}</option>)}\n          </select>\n        </fieldset>\n        <fieldset>\n          <RouteSelector\n            value={appData.selectedRoute}\n            items={Object.keys(appData.routeData)}\n            shouldItemRender={(item, value) => item.indexOf(value) > -1}\n            itemSelected={val => updateRouteStops({ ...appData, selectedRoute: val })} />\n        </fieldset>\n        <fieldset>\n          <label htmlFor=\"direction\">Destination: </label>\n          <select\n            id=\"direction\"\n            name=\"Direction\"\n            value={appData.selectedDirection}\n            onChange={event => updateRouteStops({ ...appData, selectedDirection: event.target.value })}>\n            {appData.selectedRoute !== '' && appData.routeData[appData.selectedRoute]\n              .map(o => {\n                const bound = o['bound'] === 'O' ? \"outbound\" : \"inbound\";\n                const key = `${appData.selectedRoute}:${bound}`;\n                return <option value={bound} key={key}>{o['dest_en']}</option>\n              })}\n          </select>\n        </fieldset>\n        <StopSelector\n          items={appData.routeStops}\n          itemSelected={resetStopId} />\n        <fieldset>\n          {appData.isLoading ?\n            <button type=\"submit\" disabled className=\"btn-disabled\">Loading...</button> :\n            <button type=\"submit\">{appData.selectedStopId !== '' ? 'Refresh' : 'Go'}</button>}\n        </fieldset>\n      </form>\n      {appData.error && <div className=\"warn-text\">{appData.error.message}</div>}\n      <hr></hr>\n      <EtaPanel selectedRoute={appData.selectedRoute} selectedStopId={appData.selectedStopId} etaData={appData.etaData} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export function groupBy(arr, keyExtractor) {\n    var obj = {};\n    for (const el of arr) {\n        const key = keyExtractor(el);\n        if (key in obj) {\n            obj[key].push(el);\n        } else {\n            obj[key] = [el];\n        }\n    }\n\n    return obj;\n}\n\nexport function toMap(arr, keyExtractor) {\n    var obj = {};\n    for (const el of arr) {\n        const key = keyExtractor(el);\n        if (key in obj) {\n            throw new Error(`Duplicate key: ${key}`);\n        }\n\n        obj[key] = el;\n    }\n\n    return obj;\n}","import { groupBy, toMap } from \"./util\";\n\nconst BASE_URL = \"https://data.etabus.gov.hk\";\n\nvar ROUTES = null;\nvar STOPS = null;\n\nasync function getRoutes() {\n    if (ROUTES == null) {\n        const response = await fetch(`${BASE_URL}/v1/transport/kmb/route`);\n        if (!response.ok) throw new Error(response.statusText);\n        var data = await response.json();\n        data = data['data'].filter(o => o['service_type'] === '1');\n        ROUTES = groupBy(data, o => o['route']);\n    }\n\n    return ROUTES;\n}\n\nasync function getStopsById() {\n    if (STOPS == null) {\n        const response = await fetch(`${BASE_URL}/v1/transport/kmb/stop`);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        STOPS = toMap(data['data'], o => o['stop']);\n    }\n\n    return STOPS;\n}\n\nasync function getStopIdsByRoute(route, bound) {\n    const response = await fetch(`${BASE_URL}/v1/transport/kmb/route-stop/${route}/${bound}/1`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'].map(o => o['stop']);\n}\n\nasync function getStopsByRoute(route, bound) {\n    const stopIds = await getStopIdsByRoute(route, bound);\n    const stopsById = await getStopsById();\n    return stopIds.map(stopId => stopsById[stopId]);\n}\n\nasync function getEta(route, stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/kmb/eta/${stopId}/${route}/1`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nexport const KMB_PROVIDER = {\n    getRoutes: getRoutes,\n    getStopsByRouteAndBound: getStopsByRoute,\n    getEtaByRouteAndStopId: getEta\n}","import { groupBy } from \"./util\";\n\nconst BASE_URL = \"https://rt.data.gov.hk\";\n\nconst ROUTES = {};\n\nasync function getRoutes(companyId) {\n    if (!(companyId in ROUTES)) {\n        const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/route/${companyId}`);\n        if (!response.ok) throw new Error(response.statusText);\n        const data = await response.json();\n        const routes = [];\n        for (const route of data['data']) {\n            routes.push({\n                route: route['route'],\n                bound: 'O',\n                dest_en: route['dest_en'],\n                dest_tc: route['dest_tc'],\n                dest_sc: route['dest_sc'],\n                service_type: '1'\n            });\n            routes.push({\n                route: route['route'],\n                bound: 'I',\n                dest_en: route['orig_en'],\n                dest_tc: route['orig_tc'],\n                dest_sc: route['orig_sc'],\n                service_type: '1'\n            });\n        }\n\n        ROUTES[companyId] = groupBy(routes, o => o['route']);\n    }\n\n    return ROUTES[companyId];\n}\n\nasync function getStopIdsByRoute(companyId, route, bound) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/route-stop/${companyId}/${route}/${bound}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'].map(o => o['stop']);\n}\n\nasync function getStopByStopId(stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/stop/${stopId}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nasync function getStopsByRoute(companyId, route, bound) {\n    const stopIds = await getStopIdsByRoute(companyId, route, bound);\n    return await Promise.all(stopIds.map(stopId => getStopByStopId(stopId)));\n}\n\nasync function getEta(companyId, route, stopId) {\n    const response = await fetch(`${BASE_URL}/v1/transport/citybus-nwfb/eta/${companyId}/${stopId}/${route}`);\n    if (!response.ok) throw new Error(response.statusText);\n    const data = await response.json();\n    return data['data'];\n}\n\nexport default function NWFB_CTY_PROVIDER(companyId) {\n    return {\n        getRoutes: () => getRoutes(companyId),\n        getStopsByRouteAndBound: (route, bound) => getStopsByRoute(companyId, route, bound),\n        getEtaByRouteAndStopId: (route, stopId) => getEta(companyId, route, stopId)\n    }\n}","import { KMB_PROVIDER } from \"./providers/kmb\";\nimport NWFB_CTY_PROVIDER from \"./providers/ctb-nwfb\";\n\nconst PROVIDERS = {\n    NWFB: NWFB_CTY_PROVIDER('NWFB'),\n    CITYBUS: NWFB_CTY_PROVIDER('CTB'),\n    KMB: KMB_PROVIDER,\n}\n\nexport default PROVIDERS;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport PROVIDERS from './Providers';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App providers={PROVIDERS} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}